buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

version = '1.0'
archivesBaseName = "${fileName}-${mcVersion}"

java.toolchain.languageVersion = JavaLanguageVersion.of(project.properties.javaVersion)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: project.properties.parchmentVersion
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client = {
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run')
            mods { "${modid}" { source sourceSets.main } }
        }
        server = {
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run')
            mods { "${modid}" { source sourceSets.main } }
        }
        data = {
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            args '--mod', modid, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'tconstruct'
            workingDirectory project.file('run')
            mods { "${modid}" { source sourceSets.main } }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcVersion}-${forgeVersion}"
    implementation fg.deobf("curse.maven:mantle-74924:4353120")
    implementation fg.deobf("curse.maven:tconstruct-74072:4395997")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes(["Specification-Title": project.fileName,
                    "Specification-Vendor": project.author,
                    "Specification-Version": "1.0", // We are version 1 of ourselves
                    "Implementation-Title": project.fileName,
                    "Implementation-Version": project.version,
                    "Implementation-Vendor" : project.author,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
